# handlers/doc_management.py

from telegram import Update
from telegram.ext import ContextTypes
import utils.file_utils as fu
import utils.keyboards as kb

async def select_doc(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    _, doc_id = query.data.split(":")
    context.user_data["doc_id"] = int(doc_id)
    await query.message.edit_text(
        f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç *{doc_id}* –≤—ã–±—Ä–∞–Ω.\n–¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ ‚ùì ¬´–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å¬ª –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é.",
        parse_mode="Markdown",
        reply_markup=kb.back_to_menu_button()
    )

async def delete_doc(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    _, doc_id = query.data.split(":")
    chat_id = query.message.chat.id

    # –£–¥–∞–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
    fu.delete_doc(chat_id, int(doc_id))

    # –°–æ–±–∏—Ä–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è
    docs = fu.list_docs(chat_id)

    if not docs:
        # –ù–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: —É–¥–∞–ª—è–µ–º inline-—Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —à–ª—ë–º –Ω–æ–≤–æ–µ —Å main_menu
        try:
            await query.message.delete()
        except:
            pass
        await query.message.reply_text(
            "üóëÔ∏è –í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —É–¥–∞–ª–µ–Ω—ã.",
            reply_markup=kb.main_menu()
        )
    else:
        # –ï—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã: –æ–±–Ω–æ–≤–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await query.message.edit_text(
            "üìö –í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç:",
            reply_markup=kb.docs_list(docs)
        )
